datasource db {
    provider = "postgresql"
    url = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
    output = "../generate/prisma_client"
}

enum UserRole {
    RECRUITER
    APPLICANT
}
model User { 
    id String @id @default(uuid())
    email String @db.Text @unique

    role UserRole @default(RECRUITER)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    applicantProfile ApplicantProfile?
    recruiterProfile RecruiterProfile?
    applications Application[]
    vacancies Vacancy[]

}

model ApplicantProfile {
    id String @id @default(uuid())

    
    user User @relation(fields: [userId], references: [id])
    userId String @unique

    firstName String?
    lastName String?
    resumeUrl String?
}

model RecruiterProfile {
    id String @id @default(uuid())
    user User @relation(fields: [userId], references: [id])
    userId String @unique

    companyName String

}

model Vacancy {
    id String @id @default(uuid())
    recruiter User @relation(fields: [recruitedId], references: [id])
    recruitedId String
    title String
    description String
    salaryRange String?
    createdAt DateTime @default(now())

    applications Application[]
}

enum Status {
    PENDING
    APPROVED
    REJECTED
    }

model Application {
    id String @id @default(uuid())
    applicant User @relation(fields: [applicantId], references: [id])
    applicantId String

    vacancy Vacancy @relation(fields: [vacancyId], references: [id])
    vacancyId String

    status Status @default(PENDING)
    appliedAt DateTime @default(now())

    @@unique([applicantId, vacancyId])
}